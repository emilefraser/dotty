; General stuff.
[general]
; targets = github, trello, trello_disqus
targets = github, trello, trello_disqus, phab

; If unspecified, the default taskwarrior config will be used.
;taskrc = /path/to/.taskrc

; Setting this to true will shorten links with http://da.gd/
shorten = True

; Setting this to True will include a link to the ticket in the description
inline_links = False

; Setting this to True will include a link to the ticket as an annotation
annotation_links = True

; Setting this to True will include issue comments and author name in task
; annotations
annotation_comments = True

; Defines whether or not issues should be matched based upon their description.
; In legacy mode, we will attempt to match issues to bugs based upon the
; presence of the '(bw)' marker in the task description.
; If this is false, we will only select issues having the appropriate UDA
; fields defined (which is smarter, better, newer, etc..)
legacy_matching = False

; log.level specifies the verbosity.  The default is DEBUG.
; log.level can be one of DEBUG, INFO, WARNING, ERROR, CRITICAL, DISABLED
log.level = DEBUG

; If log.file is specified, output will be redirected there.  If it remains
; unspecified, output is sent to sys.stderr
;log.file = /var/log/bugwarrior.log

; Configure the default description or annotation length.
annotation_length = 255
description_length = 255

[flavor.test]
targets = trello_disqus

[hooks]
; Use hooks to run commands prior to importing from bugwarrior-pull.
; bugwarrior-pull will run the commands in the order that they are specified
; below.
;
; pre_import: The pre_import hook is invoked after all issues have been pulled
; from remote sources, but before they are synced to the TW db. If your
; pre_import script has a non-zero exit code, the `bugwarrior-pull` command will
; exit early.
;pre_import = /home/someuser/backup.sh, /home/someuser/sometask.sh
;pre_import = ~/.task/hooks/bugwarrior-pre-import

; This section is for configuring notifications when bugwarrior-pull runs,
; and when issues are created, updated, or deleted by bugwarrior-pull.
; Three backends are currently supported:
;
;  - growlnotify (v2)   Mac OS X   "gntp" must be installed
;  - gobject            Linux      python gobject must be installed
;  - pynotify           Linux      "pynotify" must be installed
;
; To configure, adjust the settings below.  Note that neither of the
; "sticky" options have any effect on Linux with pynotify.  They only work
; for growlnotify.

[notifications]
notifications = False
;backend = growlnotify
;backend = pynotify
backend = gobject
;finished_querying_sticky = False
;task_crud_sticky = True
only_on_new_tasks = True

[github]
service = github

; This specifies that we should pull issues from repositories belonging
; to the 'ralphbean' github account.  See the note below about
; 'github.username' and 'github.login'.  They are different, and you need
; both.
github.username = akatrevorjay

; I want taskwarrior to include issues from all my repos, except these
; two because they're spammy or something.
;github.exclude_repos = project_bar,project_baz

; Working with a large number of projects, instead of excluding most of them I
; can also simply include just a limited set.
;github.include_repos = project_foo,project_foz

; Note that login and username can be different:  I can login as me, but
; scrape issues from an organization's repos.
;
; - 'github.login' is the username you ask bugwarrior to
;   login as.  Set it to your account.
; - 'github.username' is the github entity you want to pull
;   issues for.  It could be you, or some other user entirely.
github.login = akatrevorjay
;github.password = @oracle:use_keychain
github.token = NOPE

github.filter_pull_requests = True
github.include_user_issues = True
github.include_user_repos = True
github.involved_issues = True
; github.query = assignee:octocat is:open

github.import_labels_as_tags = True
; github.default_priority = M

github.project_template = {{ githubrepo | lower }}
; github.label_template = github_{{label}}
github.add_tags = github,{{githubtype|lower}}
; github.add_tags = github,{{ githubtype  }}
github.description_template = {{ githubtitle }} @{{ githubuser }} #{{ githubnumber }}

; Here's an example of a phabricator target
[phab]
service = phabricator
; No need to specify credentials.  They are gathered from ~/.arcrc

phabricator.user_phids = PHID-USER-2wluup2fljrpdmcovbj6
; TODO Why does this not seem to work at all?
; phabricator.only_if_assigned = trevorj
phabricator.only_if_assigned = PHID-USER-2wluup2fljrpdmcovbj6
; phabricator.only_if_assigned = True
;phabricator.also_unassigned = False
phabricator.add_tags = disqus,phab,{{ phabricatortype | lower }}
phabricator.project_template = disqus/phab
;phabricator.default_priority = H
phabricator.description_template = {{ phabricatortitle }} #{{ phabricatorid }}

[trello]
service = trello
trello.api_key = NOPE
trello.token = NOPE
trello.include_boards = hjcoV7xZ
trello.include_lists = Todo, Doing, In Progress, Backlog
trello.exclude_lists = Done
trello.import_labels_as_tags = true
; trello.only_if_assigned = trevorjay
; trello.also_unassigned = True
; trello.add_tags = personal,trello,{{ trelloboard | lower }},{{ trellolist | lower }}
; trello.add_tags = trello,personal,{{trellolist|lower}}
trello.add_tags = trello,personal,{{trellolist|lower}},{{trelloboard|lower}}
; trello.label_template = {{ label | lower }}
trello.description_template = {{ trellocard }} #{{ trellocardid | lower }}
trello.project_template = personal/{{ trelloboard | lower }}

[trello_disqus]
service = trello
trello.api_key = NOPE
trello.token = NOPE
trello.include_boards = Fp510dn7
trello.include_lists = Active, Backlog, Blocked, Inbox
trello.exclude_lists = Done
trello.import_labels_as_tags = true
trello.only_if_assigned = trevorjay
trello.also_unassigned = True
trello.add_tags = trello,disqus,{{trellolist|lower}},{{trelloboard|lower}}
; trello.label_template = {{ label | lower }}
trello.description_template = {{ trellocard }} #{{ trellocardid | lower }}
trello.project_template = disqus/{{ trelloboard | lower }}

;  vim: set ts=4 sw=4 tw=120 et ft=dosini :
