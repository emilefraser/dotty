# kill window
bind Q confirm kill-pane

# Toggle mouse
bind m \
  set-option mouse\;\
  display 'mouse #{?mouse,on,off}'

# split windows like vim
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5

# move panes between windows
#bind ! move-pane -t :1
#bind C-2 move-pane -t :2
#bind C-3 move-pane -t :3
#bind C-4 move-pane -t :4
#bind C-5 move-pane -t :5
#bind C-6 move-pane -t :6
#bind C-7 move-pane -t :7
#bind C-8 move-pane -t :8
#bind C-9 move-pane -t :9
#bind C-0 move-pane -t :0


# Reload the file with Prefix r
bind R source-file ~/.tmux.conf \; display "Sourced tmux.conf"

# Next and prev window
#bind -r '-' previous-window
#bind -r '=' next-window
bind p previous-window
bind n next-window

# <prefix> r to rename window
bind r command-prompt 'rename-window %%'

# <prefix> p to paste buffer
unbind P
bind P paste-buffer

# <prefix> P to choose which buffer to paste
bind C-p choose-buffer

# remap prefix
unbind C-t
set-option -g prefix C-t
# send commands to nested session with prefix prefix
bind C-t send-prefix

# enable second prefix on remote connections; allows for nested sessions.
is_ssh='test -n "${SSH_CONNECTION}"'
if-shell "$is_ssh" "unbind C-b"
if-shell "$is_ssh" "set-option -g prefix2 C-b"
if-shell "$is_ssh" "bind C-b send-prefix"

##
## vi
##

# Emacs key bindings in command prompt (prefix + :) are better than vi keys, even for vim users
set-option -g status-keys emacs

# Vi keys in copy mode
# To copy, drag to highlight text in yellow, press Enter and then release mouse
# Use vim keybindings in copy mode
# setw -g mode-keys vi
set-option -g mode-keys vi

## emacs
#setw -g mode-keys emacs
#setw -g status-keys emacs

# bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind-key -n WheelDownPane select-pane -t= \; send-keys -M
# bind-key -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# bind-key -t vi-copy    C-WheelUpPane   halfpage-up
# bind-key -t vi-copy    C-WheelDownPane halfpage-down
# bind-key -t emacs-copy C-WheelUpPane   halfpage-up
# bind-key -t emacs-copy C-WheelDownPane halfpage-down


# # Update default binding of `Enter` to also use copy-pipe
# unbind-key -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "xclip -selection clipboard"

#unbind [
#bind Escape copy-mode
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy V rectangle-toggle
#bind-key -t vi-copy y copy-pipe "xclip -i -sel clipboard >/dev/null"

## Some extra key bindings to select higher numbered windows
bind F1 selectw -t:10
bind F2 selectw -t:11
bind F3 selectw -t:12
bind F4 selectw -t:13
bind F5 selectw -t:14
bind F6 selectw -t:15
bind F7 selectw -t:16
bind F8 selectw -t:17
bind F9 selectw -t:18
bind F10 selectw -t:19
bind F11 selectw -t:20
bind F12 selectw -t:21

# Keys to toggle monitoring activity in a window, and synchronize-panes
bind w set-option monitor-activity\; display 'monitor-activity #{?monitor-activity,on,off}'
bind S set-option synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Keys to hide and show a window name from the status line
bind 'C-_' set-option window-status-format '#I'\; set-option window-status-current-format '#I'
bind 'C-+' set-option window-status-format '#I:#W#F'\; set-option window-status-current-format '#I:#W#F'

# display visible indicator of each pane
bind 'W' display-panes

# reload this on 'r'
bind r source-file ~/.tmux.conf

## vim copying
#bind -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
##bind -t vi-copy PPage page-up
##bind -t vi-copy NPage page-down

##bind -t vi-copy v begin-selection
##bind -t vi-copy y copy-selection
##bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | pbcopy"

# copying and pasting
bind [ copy-mode
bind ] paste-buffer -s \015
#unbind [
#unbind ]

# choose buffer to paste interactively (default key was '=')
#bind p paste-buffer
#bind p choose-buffer

# Bring back clear screen under tmux prefix
#bind C-l send-keys 'C-l'

# last window
bind L last-window

# Sync keys pressed across panes
#bind e setw synchronize-panes on
#bind E setw synchronize-panes off

# fuzzy select pane
bind-key 0 run "tmux split-window -l 12 'zsh -ci ftpane'"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
# unbind -n C-\\
# bind -n "C-\\" if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

unbind C-h
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

#bind -n C-Left if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-Down if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-Up if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-Right if-shell "$is_vim" "send-keys C-l" "select-pane -R"

unbind -n C-Left
unbind -n C-Right
unbind -n C-Up
unbind -n C-Down

bind -n S-Left select-pane -L
bind -n S-Down select-pane -D
bind -n S-Up select-pane -U
bind -n S-Right select-pane -R

# Similar to 'C-w j' to navigate windows in Vim
unbind h
unbind j
unbind k
unbind l
unbind "\\"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind "\\" select-pane -l

#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
#bind "\\" select-pane -l

## Resize panes with arrows
#bind -n C-S-Left resize-pane -L 1
#bind -n C-S-Down resize-pane -D 1
#bind -n C-S-Up resize-pane -U 1
#bind -n C-S-Right resize-pane -R 1

# fix resizing (does not work with iterm integration)
is_iterm='test -n "${ITERM_SESSION_ID}"'
is_itermux='echo "${ITERM_PROFILE}" | grep -i tmux'
if-shell "$is_iterm" "setw -g aggressive-resize off" "setw -g aggressive-resize on"
#unbind C-h
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"

# vim resizes
bind - resize-pane -D 1
bind + resize-pane -U 1
bind < resize-pane -L 1
bind > resize-pane -R 1

# faster resizes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

## swap panes
bind -r J swap-pane -D
bind -r K swap-pane -U

# resize panes like vim
bind -r < resize-pane -L 3
bind -r > resize-pane -R 3
bind -r + resize-pane -U 1
bind -r = resize-pane -D 1

## vim's definition of a horizontal/vertical split is reversed from tmux's
#bind s split-window -v
#bind v split-window -h

# vim style split + perserve pwd
bind s split-window -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# split or new window path perserve
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

#bind n new-window -c "#{pane_current_path}"
#bind i split-window -h -c "#{pane_current_path}"
#bind v split-window -c "#{pane_current_path}"

# list all paste buffers (default key is '#')
bind b list-buffers

# delete the most recently copied buffer of text (default key was '-')
bind x delete-buffer

# Clear scrollback history
bind C-k clear-history

# Screen-like key bindings

# new window
bind C-c new-window
bind c new-window

# quit
bind \ confirm-before kill-server

# displays
bind * list-clients


#  vim: set ts=4 sw=4 tw=120 noet ft=tmux :
